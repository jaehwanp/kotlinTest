version: '3.8'

services:
  # Redis
  redis:
    image: redis:8.0.3-alpine
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - ticket-network
    volumes:
      - redis_data:/data

  # Kafka
  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    environment:
      # Auto create topics
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # KRaft
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_KRAFT_CLUSTER_ID=a2YAO81LRCeFdyzsJ6YHFQ
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listener
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - ALLOW_PLAINTEXT_LISTENER=yes

    ports:
      - '9092:9092'
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - ticket-network

  # elasticsearch
  elasticsearch:
    image: elasticsearch:8.18.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # 보안 비활성화 (개발용)
      - ES_JAVA_OPTS=-Xms512m -Xmx512m # 메모리 설정
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - ticket-network
    volumes:
      - esdata:/usr/share/elasticsearch/data

  # logstash
  logstash:
    image: logstash:8.18.3
    container_name: logstash
    ports:
      - '5044:5044'
    environment:
      LS_JAVA_OPTS: '-Xms256m -Xmx512m'
    depends_on:
      - kafka
      - elasticsearch
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - ticket-network

  # kibana
  kibana:
    container_name: kibana
    image: kibana:8.18.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - ticket-network

volumes:
  esdata:
  redis_data:
  kafka_data:

networks:
  ticket-network:
    external: true
